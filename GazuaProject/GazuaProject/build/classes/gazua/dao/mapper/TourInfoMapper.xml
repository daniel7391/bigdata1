<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="TourInfoMapper">
		<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
		<resultMap type="gazua.model.TourInfo" id="tourinfo">
			<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
			<result column="id" property="id"/>
			<result column="name" property="name"/>
			<result column="postcode" property="postcode"/>
			<result column="addr1" property="addr1"/>
			<result column="addr2" property="addr2"/>
			<result column="cost" property="cost"/>
			<result column="route1" property="route1"/>
			<result column="route2" property="route2"/>
			<result column="holyday1" property="holiday1"/>
			<result column="holyday2" property="holiday2"/>
			<result column="holyday3" property="holiday3"/>
			<result column="intro" property="intro"/>
			<result column="likes" property="likes"/>
			<result column="tel" property="tel"/>
			<result column="homepage" property="homePage"/>
			<result column="x" property="x"/>
			<result column="y" property="y"/>
			<result column="tour_tourCode" property="tour_tourCode"/>
		</resultMap>

		<!-- 게시물 하나에 대한 정보를 조회한다. -->
		<select id="selectTourInfoList" resultMap="tourinfo" parameterType="gazua.model.TourInfo"> 
			SELECT * FROM tourinfo 
		</select>
		
		<!-- 이전글 정보를 조회한다. -->
		<select id="selectPrevTourInfo" resultMap="tourinfo" parameterType="gazua.model.TourInfo"> 
		SELECT * FROM tourinfo 
		WHERE id &lt; #{id} 
		ORDER BY id DESC LIMIT 0, 1
		</select>
		
		<!-- 다음글 정보를 조회한다. -->
		<select id="selectNextTourInfo" resultMap="tourinfo" parameterType="gazua.model.TourInfo"> 
		SELECT * FROM tourinfo
		WHERE id &gt; #{id} ORDER BY id ASC LIMIT 0, 1 
		</select>
		
		<!-- 전체 게시물 수를 조회한다. -->
		<select id="selectTourInfoCount" parameterType="gazua.model.TourInfo" resultType="int">
		SELECT COUNT(id) 
		FROM tourinfo 
			<where>
				<if test="name != null or intro != null">
					<if test="name != null"> 
					name LIKE concat('%', #{name}, '%') 
					</if>
					<if test="intro != null"> 
					OR intro LIKE concat('%', #{intro}, '%') 
					</if>
				</if>
			</where>
		</select>
</mapper>